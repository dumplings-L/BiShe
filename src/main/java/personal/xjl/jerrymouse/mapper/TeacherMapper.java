package personal.xjl.jerrymouse.mapper;

import org.apache.ibatis.annotations.*;
import org.apache.ibatis.type.JdbcType;
import personal.xjl.jerrymouse.entity.Course;
import personal.xjl.jerrymouse.entity.Teacher;

import java.util.List;
@Mapper
public interface TeacherMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table teacher
     *
     * @mbggenerated
     */
    @Delete("DELETE FROM teacher WHERE Id = #{id,jdbcType=INTEGER}")
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table teacher
     *
     * @mbggenerated
     */
    @Insert({
            "insert into teacher (Id, name, ",
            "password, sex, birthday, ",
            "course_id, professional)",
            "values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, ",
            "#{password,jdbcType=VARCHAR}, #{sex,jdbcType=INTEGER}, #{birthday,jdbcType=VARCHAR}, ",
            "#{courseId,jdbcType=INTEGER}, #{professional,jdbcType=VARCHAR})"
    })
    int insert(Teacher record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table teacher
     *
     * @mbggenerated
     */
    int insertSelective(Teacher record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table teacher
     *
     * @mbggenerated
     */
    @Select({
            "select",
            "Id, name, password, sex, birthday ,course_id , professional",
            "from teacher",
            "where Id = #{id,jdbcType=INTEGER}"
    })
    @Results({
            @Result(column="Id", property="id", jdbcType=JdbcType.INTEGER, id=true),
            @Result(column="name", property="name", jdbcType=JdbcType.VARCHAR),
            @Result(column="password", property="password", jdbcType=JdbcType.VARCHAR),
            @Result(column="sex", property="sex", jdbcType=JdbcType.INTEGER),
            @Result(column="birthday", property="birthday", jdbcType=JdbcType.VARCHAR),
            @Result(column="course_id", property="courseId", jdbcType=JdbcType.INTEGER),
            @Result(column="professional", property="professional", jdbcType=JdbcType.VARCHAR)
    })
    Teacher selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table teacher
     *
     * @mbggenerated
     */
    int updateByPrimaryKeySelective(Teacher record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table teacher
     *
     * @mbggenerated
     */
    @Update({
            "update teacher",
            "set name = #{name,jdbcType=VARCHAR},",
            "password = #{password,jdbcType=VARCHAR},",
            "sex = #{sex,jdbcType=INTEGER},",
            "birthday = #{birthday,jdbcType=VARCHAR},",
            "course_id = #{courseId,jdbcType=INTEGER},",
            "professional = #{professional,jdbcType=VARCHAR}",
            "where Id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(Teacher record);
//    @Select("select t.*,c.name as cname  from teacher t ,course c where t.course_id=c.id")
//    @Select("select * from teacher")
//    @Results({
//
//            @Result(column="course_id", property="course", javaType= Course.class,
//                    one = @One(select = "personal.xjl.jerrymouse.mapper.CourseMapper.selectTeacherByCourseId"))
//
//    })
//    List<Teacher> queryAll();
    @Select("select * from teacher")
    @Results({
            @Result(column="Id", property="id", jdbcType=JdbcType.INTEGER, id=true),

            @Result(column = "id",property = "courses",javaType = List.class,
                    many = @Many(select = "personal.xjl.jerrymouse.mapper.CourseMapper.selectTeacherByCourseId"))
    })
    List<Teacher> queryAll();

    @Select("select * from teacher t,tbl_teacherCourse tc where t.id=tc.teacher_id and tc.course_id=#{courseId}")
    List<Course> selectByCourseId(int course_id);

    @Select("select * from teacher where name=#{name} and password=#{password}")
    List<Teacher>  selectByNameAndPassword(String name, String password);
}